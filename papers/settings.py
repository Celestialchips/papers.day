"""
Django settings for papers project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from decouple import config
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SERVER_TYPE = config('SERVER_TYPE')
APPEND_SLASH = True

# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in the dev or production servers!
if SERVER_TYPE == 'local':
    DEBUG = True
elif SERVER_TYPE in ['development', 'production']:
    DEBUG = False

if SERVER_TYPE == 'local':
    DOMAIN_URL = 'http://127.0.0.1:8000'
elif SERVER_TYPE == 'development':
    DOMAIN_URL = 'https://dev.papers.day'
elif SERVER_TYPE == 'production':
    DOMAIN_URL = 'https://papers.day'

if SERVER_TYPE == 'local':
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '']
elif SERVER_TYPE == 'development':
    ALLOWED_HOSTS = ['dev.papers.day']
elif SERVER_TYPE == 'production':
    ALLOWED_HOSTS = ['papers.day', 'www.papers.day']

if SERVER_TYPE == 'local':
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
    SECURE_SSL_REDIRECT = False
elif SERVER_TYPE in ['development', 'production']:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True

OPENAI_API_KEY = config('OPENAI_API_KEY')
# Application definition

INSTALLED_APPS = [
    'backend',
    'homepage',
    'django.contrib.admin',
    'django_extensions',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'papers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'papers.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
if SERVER_TYPE == 'local':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'papers',
            'USER': 'papers',
            'PASSWORD':config('DB_PASSWORD'),
            'HOST': 'localhost',
            'PORT': '',
        }
    }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'uwsgi_log': {
            'class': 'logging.FileHandler',
            'filename': 'errors.log'
        },
    },
    'root': {
        'handlers': ['uwsgi_log'],
        'level': 'ERROR',
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
